---
- hosts: all
  remote_user: ubuntu
  become: true
  tasks:
    - name: install dependencies
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
    - name: add GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: add docker repository to apt
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    - name: install docker
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: check docker is active
      service:
        name: docker
        state: started
        enabled: yes
        
    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
    - name: adding ubuntu to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes
        
    - name: Install docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'
    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /usr/local/bin/docker-compose
        owner: ubuntu
        group: ubuntu 
        
    - name: Ensure Docker is installed
      include_role:
        name: geerlingguy.docker

    - name: Ensure user "docker" is in sudo group
      ansible.builtin.user:
        name: docker
        groups: sudo
        append: yes
        
    - name: Create Portainer Data Volume
      ansible.builtin.docker_volume:
        name: portainer_data
        state: present

    - name: Deploy Portainer Container
      ansible.builtin.docker_container:
        name: portainer
        image: portainer/portainer-ce:latest
        restart_policy: always
        state: started
        ports:
          - "8000:8000"
          - "9000:9000"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "portainer_data:/data"
          
          

          
          
